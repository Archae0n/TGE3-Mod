#############
# Amenities buildings
#############
building_luxury_residence = {
	base_buildtime = 360

	category = amenity
	
	potential = {
		NOT = { is_planet_class = pc_habitat }
		NOT = { has_modifier = slave_colony }		
		exists = owner
		owner = { 
			is_regular_empire = yes
			NOT = { has_valid_civic = civic_shared_burden }
		}
	}

	allow = {
		buildings_simple_allow = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				free_building_slots = 0
				free_jobs = 0
				free_housing > 10
				owner = {
					is_ai = yes
				}
			}
			owner = { is_regular_empire = no }
			owner = { has_valid_civic = civic_shared_burden }
			has_modifier = slave_colony
		}
	}
	
	convert_to = {
		building_drone_storage
		building_hive_warren
		building_communal_housing
	}
		
	planet_modifier = {
		planet_housing_add = 3
		planet_amenities_add = 5
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_non_swapped_tradition = tr_domination_imperious_architecture
			}					
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_functional_architecture
					has_valid_civic = civic_megacorp_architecture
					has_valid_civic = civic_machine_builder
					has_valid_civic = civic_hive_tunnel_networks
				}
			}					
		}
		modifier = {
			planet_housing_add = 2
		}
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = 300
		}
		upkeep = {
			energy = 2
		}
	}	
	
	upgrades = {
		"building_paradise_dome"
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 7000 #High weight to gurantee that if the below is true then the AI should build it
			free_housing < 5 #Prevents the AI from running out of residences when nearly out of tiles
			OR = {
				free_jobs > 0 #prevents spamming of residence buildings when no jobs are open
				AND = {
					free_housing <= 0 #Prevents the AI from running out of residences when nearly out of tiles
					not = { any_owned_pop = { is_unemployed = yes } }
				}
			}
			free_district_slots = 0 #Do not build when city districts can still be built
			NOT = { is_planet_class = pc_habitat }
		}
		modifier = {
			factor = 0
			has_building = building_luxury_residence
			owner = { has_technology = tech_paradise_dome }
		}
	}
}

building_paradise_dome = {
	base_buildtime = 480
	can_build = no

	category = amenity
	
	potential = {
		has_building = building_luxury_residence
	}

	allow = {
		has_upgraded_capital = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_regular_empire = no }
			owner = { has_valid_civic = civic_shared_burden }
			has_modifier = slave_colony
		}
	}
	
	convert_to = {
		building_organic_paradise
		building_drone_megastorage
		building_expanded_warren
		building_communal_housing_large
	}
	
	planet_modifier = {
		planet_housing_add = 6
		planet_amenities_add = 10
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_non_swapped_tradition = tr_domination_imperious_architecture
			}					
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_functional_architecture
					has_valid_civic = civic_megacorp_architecture
					has_valid_civic = civic_machine_builder
					has_valid_civic = civic_hive_tunnel_networks
				}
			}					
		}
		modifier = {
			planet_housing_add = 2
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = 500
			rare_crystals = 50
		}
		upkeep = {
			energy = 2
			rare_crystals = 1
		}
	}
	
	prerequisites = {
		"tech_paradise_dome"
	}
	
	show_tech_unlock_if = { 
		owner = { 
			is_regular_empire = yes
			NOT = { has_valid_civic = civic_shared_burden }
		}
	}
	
	ai_weight = {
		weight = 1#Needs to be higher than base building to gurantee the AI upgrades before it builds a new regular housing building
		modifier = {
			factor = 0
			owner = { has_country_flag = buildings_new_crystal_building }
		}
	}#Should always upgrade
	on_built = {
		planet = { 
			owner = { set_timed_country_flag = { flag = buildings_new_crystal_building days = 480 } }
		}
	}
}

building_communal_housing = {
	base_buildtime = 360
	icon = building_residence

	category = amenity
	
	potential = {
		NOT = { is_planet_class = pc_habitat }
		NOT = { has_modifier = slave_colony }
		exists = owner
		owner = { 
			is_regular_empire = yes
			has_valid_civic = civic_shared_burden
		}
	}

	allow = {
		buildings_simple_allow = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				free_building_slots = 0
				free_jobs = 0
				free_housing > 10
				owner = {
					is_ai = yes
				}
			}
			NOR = {
				NOT = { is_planet_class = pc_habitat }
				NOT = { has_modifier = slave_colony }
				owner = { 
					is_regular_empire = yes
					has_valid_civic = civic_shared_burden
				}
			}
		}
	}
	
	convert_to = {
		building_drone_storage
		building_hive_warren
		building_luxury_residence
	}
		
	planet_modifier = {
		planet_housing_add = 5
		planet_amenities_add = 3
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_non_swapped_tradition = tr_domination_imperious_architecture
			}					
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_functional_architecture
					has_valid_civic = civic_megacorp_architecture
					has_valid_civic = civic_machine_builder
					has_valid_civic = civic_hive_tunnel_networks
				}
			}					
		}
		modifier = {
			planet_housing_add = 2
		}
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = 300
		}
		upkeep = {
			energy = 2
		}
	}	
	
	upgrades = {
		"building_communal_housing_large"
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 7000 #High weight to gurantee that if the below is true then the AI should build it
			free_housing < 5 #Prevents the AI from running out of residences when nearly out of tiles
			OR = {
				free_jobs > 0 #prevents spamming of residence buildings when no jobs are open
				AND = {
					free_housing <= 0 #Prevents the AI from running out of residences when nearly out of tiles
					not = { any_owned_pop = { is_unemployed = yes } }
				}
			}
			free_district_slots = 0 #Do not build when city districts can still be built
			NOT = { is_planet_class = pc_habitat }
		}
		modifier = {
			factor = 0
			has_building = building_communal_housing
			owner = { has_technology = tech_paradise_dome }
		}
	}
}

building_communal_housing_large = {
	base_buildtime = 480
	can_build = no
	icon = building_paradise_dome

	category = amenity

	potential = {
		has_building = building_communal_housing
	}	
	
	allow = {
		has_upgraded_capital = yes
	}
	
	destroy_trigger = {
		exists = owner
		NOR = {
			NOT = { is_planet_class = pc_habitat }
			NOT = { has_modifier = slave_colony }
			owner = { 
				is_regular_empire = yes
				has_valid_civic = civic_shared_burden
			}
		}
	}
	
	show_tech_unlock_if = { 
		owner = { 
			is_regular_empire = yes
			has_valid_civic = civic_shared_burden
		}
	}
	
	convert_to = {
		building_drone_megastorage
		building_expanded_warren
		building_paradise_dome
	}
	
	planet_modifier = {
		planet_housing_add = 10
		planet_amenities_add = 6
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_non_swapped_tradition = tr_domination_imperious_architecture
			}					
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_functional_architecture
					has_valid_civic = civic_megacorp_architecture
					has_valid_civic = civic_machine_builder
					has_valid_civic = civic_hive_tunnel_networks
				}
			}					
		}
		modifier = {
			planet_housing_add = 2
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = 500
			rare_crystals = 50
		}
		upkeep = {
			energy = 2
			rare_crystals = 1
		}
	}
	
	show_tech_unlock_if = {
		has_valid_civic = civic_shared_burden
	}
	
	prerequisites = {
		"tech_paradise_dome"
	}
	
	ai_weight = {
		weight = 1#Needs to be higher than base building to gurantee the AI upgrades before it builds a new regular housing building
		modifier = {
			factor = 0
			owner = { has_country_flag = buildings_new_crystal_building }
		}
	}#Should always upgrade
	on_built = {
		planet = { 
			owner = { set_timed_country_flag = { flag = buildings_new_crystal_building days = 480 } }
		}
	}
}

#Machine housing
building_drone_storage = {
	base_buildtime = 360

	category = amenity
	
	potential = {
		exists = owner
		owner = { is_machine_empire = yes }
	}

	allow = {
		buildings_simple_allow = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				free_building_slots = 0
				free_jobs = 0
				free_housing > 10
				owner = {
					is_ai = yes
				}
			}
			NOR = {
				owner = { is_machine_empire = yes }
			}
		}
	}
	
	convert_to = {
		building_luxury_residence
		building_communal_housing
		building_hive_warren
	}
		
	planet_modifier = {
		planet_housing_add = 4
		planet_amenities_add = 3
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_functional_architecture
					has_valid_civic = civic_megacorp_architecture
					has_valid_civic = civic_machine_builder
					has_valid_civic = civic_hive_tunnel_networks
				}
			}					
		}
		modifier = {
			planet_housing_add = 2
		}
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = 300
		}
		upkeep = {
			energy = 2
		}
	}
	
	upgrades = {
		"building_drone_megastorage"
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 7000 #High weight to gurantee that if the below is true then the AI should build it
			free_housing < 5 #Prevents the AI from running out of residences when nearly out of tiles
			OR = {
				free_jobs > 0 #prevents spamming of residence buildings when no jobs are open
				AND = {
					free_housing <= 0 #Prevents the AI from running out of residences when nearly out of tiles
					not = { any_owned_pop = { is_unemployed = yes } }
				}
			}
			free_district_slots = 0 #Do not build when city districts can still be built
			NOT = { is_planet_class = pc_habitat }
		}
		modifier = {
			weight = 7000 #High weight to gurantee that if the below is true then the AI should build it
			is_planet_class = pc_habitat
			free_housing < 4
			OR = {
				not = { any_owned_pop = { is_unemployed = yes } }
				free_jobs > 0 #Servitors can run into a situation with no houses but free jobs open
			}
		}
		modifier = {
			factor = 0
			has_building = building_drone_storage
			owner = { has_technology = tech_micro_replicators }
		}
	}
}

building_drone_megastorage = {
	base_buildtime = 480
	can_build = no

	category = amenity

	allow = {
		has_upgraded_capital = yes
	}
	potential = {
		has_building = building_drone_storage
	}
	destroy_trigger = {
		exists = owner
		NOR = {
			owner = { is_machine_empire = yes }
		}
	}
	
	convert_to = {
		building_paradise_dome
		building_expanded_warren
		building_communal_housing_large
	}
	
	planet_modifier = {
		planet_housing_add = 8
		planet_amenities_add = 6
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_non_swapped_tradition = tr_domination_imperious_architecture
			}					
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_functional_architecture
					has_valid_civic = civic_megacorp_architecture
					has_valid_civic = civic_machine_builder
					has_valid_civic = civic_hive_tunnel_networks
				}
			}					
		}
		modifier = {
			planet_housing_add = 2
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = 300
			rare_crystals = 50
		}
		upkeep = {
			energy = 2
			rare_crystals = 1
		}
	}
	
	
	prerequisites = {
		"tech_micro_replicators" 
	}
	
	ai_weight = {
		weight = 0#Needs to be higher than base building to gurantee the AI upgrades before it builds a new regular housing building
		modifier = {
			weight = 1
			OR = {
				buildings_has_crystals = yes
				num_buildings = { type = building_drone_storage value > 1 }
			}
		}
		modifier = {
			factor = 10
			is_planet_class = pc_habitat
		}
		modifier = {
			factor = 0
			owner = { has_country_flag = buildings_new_crystal_building }
		}
	}#Should always upgrade
	on_built = {
		planet = { 
			owner = { set_timed_country_flag = { flag = buildings_new_crystal_building days = 480 } }
		}
	}
}

#Hive housing
building_hive_warren = {
	base_buildtime = 360

	category = amenity
	
	potential = {
		exists = owner
		owner = { is_hive_empire = yes }
	}

	allow = {
		buildings_simple_allow = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				owner = { is_ai = yes }
				years_passed < 3
			}#Blow up the one on the homeworld.
			AND = {
				planet = {
					free_building_slots = 0
					free_jobs = 0
					free_housing > 10
					owner = {
						is_ai = yes
					}
				}
			}
			NOR = {
				owner = { is_hive_empire = yes }
			}
		}
	}
	
	convert_to = {
		building_luxury_residence
		building_drone_storage
		building_communal_housing
	}
		
	planet_modifier = {
		planet_housing_add = 6
		job_maintenance_drone_add = 1
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_functional_architecture
					has_valid_civic = civic_megacorp_architecture
					has_valid_civic = civic_machine_builder
					has_valid_civic = civic_hive_tunnel_networks
				}
			}					
		}
		modifier = {
			planet_housing_add = 2
		}
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = 300
		}
		upkeep = {
			energy = 2
		}
	}
	
	upgrades = {
		"building_expanded_warren"
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 7000 #High weight to gurantee that if the below is true then the AI should build it
			free_housing < 5 #Prevents the AI from running out of residences when nearly out of tiles
			OR = {
				free_jobs > 0 #prevents spamming of residence buildings when no jobs are open
				AND = {
					free_housing <= 0 #Prevents the AI from running out of residences when nearly out of tiles
					not = { any_owned_pop = { is_unemployed = yes } }
				}
			}
			free_district_slots = 0 #Do not build when city districts can still be built
			NOT = { is_planet_class = pc_habitat }
		}
		modifier = {
			weight = 7000 #High weight to gurantee that if the below is true then the AI should build it
			is_planet_class = pc_habitat
			free_housing < 4
			OR = {
				not = { any_owned_pop = { is_unemployed = yes } }
				free_jobs > 0 #Servitors can run into a situation with no houses but free jobs open
			}
		}
		modifier = {
			factor = 0
			has_building = building_hive_warren
			owner = { has_technology = tech_housing_2 }
		}
	}
}

building_expanded_warren = {
	base_buildtime = 480
	can_build = no
	
	category = amenity
	
	potential = {
		has_building = building_hive_warren
	}

	allow = {
		has_upgraded_capital = yes
	}
	
	show_tech_unlock_if = { 
		owner = { is_hive_empire = yes }
	}
	
	destroy_trigger = {
		exists = owner
		NOR = {
			owner = { is_hive_empire = yes }
		}
	}
	
	convert_to = {
		building_paradise_dome
		building_drone_megastorage
		building_communal_housing_large
	}
	
	planet_modifier = {
		planet_housing_add = 12
		job_maintenance_drone_add = 2
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_non_swapped_tradition = tr_domination_imperious_architecture
			}					
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_functional_architecture
					has_valid_civic = civic_megacorp_architecture
					has_valid_civic = civic_machine_builder
					has_valid_civic = civic_hive_tunnel_networks
				}
			}					
		}
		modifier = {
			planet_housing_add = 2
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = 500
			rare_crystals = 50
		}
		upkeep = {
			energy = 2
			rare_crystals = 1
		}
	}
	
	
	prerequisites = {
		"tech_housing_2" 
	}
	
	ai_weight = {
		weight = 0#Needs to be higher than base building to gurantee the AI upgrades before it builds a new regular housing building
		modifier = {
			weight = 1
			OR = {
				buildings_has_crystals = yes
				num_buildings = { type = building_hive_warren value > 1 }
			}
		}
		modifier = {
			factor = 10
			is_planet_class = pc_habitat
		}
		modifier = {
			factor = 0
			owner = { has_country_flag = buildings_new_crystal_building }
		}
	}#Should always upgrade
	on_built = {
		planet = { 
			owner = { set_timed_country_flag = { flag = buildings_new_crystal_building days = 480 } }
		}
	}
}

building_spawning_pool = {
	base_buildtime = 360
	base_cap_amount = 1

	category = amenity
	
	potential = {
		owner = { is_hive_empire = yes }
		or = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}
	
	destroy_trigger = {
		exists = owner
		owner = { is_hive_empire = no }
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				NOT = { has_valid_civic = civic_hive_brood_queens }
			}
		}
		job_spawning_drone_add = 1
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_hive_brood_queens }
		}
		job_brood_queen_add = 1
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = 300
		}
		upkeep = {
			energy = 2
		}
	}
	
	triggered_desc = {
		trigger = {
			exists = owner
			owner = { NOT = { has_valid_civic = civic_hive_brood_queens } }
		}
		text = job_spawning_drone_effect_desc
	}
	
	triggered_desc = {
		trigger = {
			exists = owner
			owner = { has_valid_civic = civic_hive_brood_queens }
		}
		text = job_brood_queen_effect_desc
	}

	ai_weight = {
		weight = 500000
	}#Best hive mind building in the game - should always be built.
}
